@model ActivityReceiver.ViewModels.QuestionManage.QuestionManageEditGetViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_LayoutMetronic.cshtml";
}

<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">
                Default Forms
            </h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a href="#" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">
                    -
                </li>
                <li class="m-nav__item">
                    <a href="" class="m-nav__link">
                        <span class="m-nav__link-text">
                            問題管理
                        </span>
                    </a>
                </li>
                <li class="m-nav__separator">
                    -
                </li>
                <li class="m-nav__item">
                    <a href="" class="m-nav__link">
                        <span class="m-nav__link-text">
                            クエスションリスト
                        </span>
                    </a>
                </li>
                <li class="m-nav__separator">
                    -
                </li>
                <li class="m-nav__item">
                    <a href="" class="m-nav__link">
                        <span class="m-nav__link-text">
                            クエスションを編集
                        </span>
                    </a>
                </li>
            </ul>
        </div>
        <div>
            <div class="m-dropdown m-dropdown--inline m-dropdown--arrow m-dropdown--align-right m-dropdown--align-push" m-dropdown-toggle="hover" aria-expanded="true">
                <a href="#" class="m-portlet__nav-link btn btn-lg btn-secondary  m-btn m-btn--outline-2x m-btn--air m-btn--icon m-btn--icon-only m-btn--pill  m-dropdown__toggle">
                    <i class="la la-plus m--hide"></i>
                    <i class="la la-ellipsis-h"></i>
                </a>
                <div class="m-dropdown__wrapper">
                    <span class="m-dropdown__arrow m-dropdown__arrow--right m-dropdown__arrow--adjust"></span>
                    <div class="m-dropdown__inner">
                        <div class="m-dropdown__body">
                            <div class="m-dropdown__content">
                                <ul class="m-nav">
                                    <li class="m-nav__section m-nav__section--first m--hide">
                                        <span class="m-nav__section-text">
                                            Quick Actions
                                        </span>
                                    </li>
                                    <li class="m-nav__item">
                                        <a href="" class="m-nav__link">
                                            <i class="m-nav__link-icon flaticon-share"></i>
                                            <span class="m-nav__link-text">
                                                Activity
                                            </span>
                                        </a>
                                    </li>
                                    <li class="m-nav__item">
                                        <a href="" class="m-nav__link">
                                            <i class="m-nav__link-icon flaticon-chat-1"></i>
                                            <span class="m-nav__link-text">
                                                Messages
                                            </span>
                                        </a>
                                    </li>
                                    <li class="m-nav__item">
                                        <a href="" class="m-nav__link">
                                            <i class="m-nav__link-icon flaticon-info"></i>
                                            <span class="m-nav__link-text">
                                                FAQ
                                            </span>
                                        </a>
                                    </li>
                                    <li class="m-nav__item">
                                        <a href="" class="m-nav__link">
                                            <i class="m-nav__link-icon flaticon-lifebuoy"></i>
                                            <span class="m-nav__link-text">
                                                Support
                                            </span>
                                        </a>
                                    </li>
                                    <li class="m-nav__separator m-nav__separator--fit"></li>
                                    <li class="m-nav__item">
                                        <a href="#" class="btn btn-outline-danger m-btn m-btn--pill m-btn--wide btn-sm">
                                            Submit
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="m-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="m-alert m-alert--icon m-alert--air m-alert--square alert alert-dismissible m--margin-bottom-30" role="alert">
                <div class="m-alert__icon">
                    <i class="flaticon-exclamation m--font-brand"></i>
                </div>
                <div class="m-alert__text">
                    The Metronic Datatable component supports initialization from HTML table. It also defines the schema model of the data source. In addition to the visualization, the Datatable provides built-in support for operations over data such as sorting, filtering and paging performed in user browser(frontend).
                </div>
            </div>
            <div class="m-portlet">
                <div class="m-portlet__head">
                    <div class="m-portlet__head-caption">
                        <div class="m-portlet__head-title">
                            <span class="m-portlet__head-icon m--hide">
                                <i class="la la-gear"></i>
                            </span>
                            <h3 class="m-portlet__head-text">
                                問題を編集する
                            </h3>
                        </div>
                    </div>
                </div>
                <!--begin::Form-->
                @using (Html.BeginForm("Edit", "QuestionManage", FormMethod.Post, htmlAttributes: new { @class = "m-form m-form--fit m-form--label-align-right" }))
                {
                    @Html.HiddenFor(model => model.ID)
                    @Html.AntiForgeryToken()
                    <div class="m-portlet__body">
                        <div class="m-form__section m-form__section--first">
                            <div class="form-group m-form__group row">
                                <label class="col-lg-3 col-form-label">
                                    @Html.ValidationSummary("", new { @class = "m--font-danger" })
                                </label>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.SentenceEN)
                                </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.SentenceEN, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example: We can't change the direction of the wind, but we can adjust the sails." } })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.SentenceEN, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        英文を入力してください
                                    </span>
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.SentenceJP)
                                </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.SentenceJP, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example: わたしたちは風向が変えられないが、船の帆が調整できる。" } })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.SentenceJP, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        日本文を入力してください
                                    </span>
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.Level)
                                </label>
                                <div class="col-lg-6">

                                    <select class="custom-select form-control" name="Level">
                                        <option value="" disabled selected>難易度、レベル</option>

                                        <option value="0">
                                            初級
                                        </option>

                                        <option value="1">
                                            中級
                                        </option>

                                        <option value="2">
                                            上級
                                        </option>

                                    </select>
                                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        レベルを選んでください
                                    </span>
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    文法項目
                                </label>
                                <div class="col-lg-6">
                                    <select class="form-control m-select2" id="select2-multiple" name="GrammarIDs" multiple="multiple">

                                        @foreach (var grammar in Model.Grammars)
                                        {
                                            <option value="@grammar.ID" @(Model.GrammarIDs.Contains(grammar.ID) ? "selected":"")>
                                                @grammar.Name
                                            </option>
                                        }

                                    </select>
                                </div>
                            </div>

                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.Division)
                                </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example: the|can|change|sails|,|the|direction|of|the wind|we|but|can't|we|adjust| " } })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.Division, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        問題の区切りを入力してください
                                    </span>
                                </div>
                            </div>

                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.AnswerDivision)
                                </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.AnswerDivision, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example: we|can't|change|the|direction|of|the wind|,|but|we|can|adjust|the|sails|" } })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.AnswerDivision, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        正解の区切りを入力してください
                                    </span>
                                </div>
                            </div>

                            <div class="form-group m-form__group row">
                                <label class="col-lg-2 col-form-label">
                                    @Html.DisplayNameFor(model => model.Remark)
                                </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control m-input", @placeholder = "example: 青山文庫の「TOEFL、900目指し」ページ136の英文" } })
                                    <div class="form-control-feedback">
                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "m--font-danger" })
                                    </div>
                                    <span class="m-form__help">
                                        コメントを入力してください
                                    </span>
                                </div>
                            </div>
                            <div class="m-form__seperator m-form__seperator--dashed"></div>
                            <div class="m-form__section m-form__section--last">
                                <div class="m-form__section m-form__section--last">
                                    <div class="form-group m-form__group row">
                                        <label class="col-lg-2 col-form-label">
                                            作成時間
                                        </label>
                                        <div class="col-lg-4 col-md-9 col-sm-12">
                                            <div class="input-group date">
                                                <input type="text" class="form-control m-input c-datatimepicker" name="CreateDate" readonly value="@DateTime.Now.ToString(("yyyy/MM/dd HH:mm"))" id="m_datetimepicker_3" />
                                                <div class="input-group-append">
                                                    <span class="input-group-text">
                                                        <i class="la la-calendar glyphicon-th"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <span class="m-form__help">
                                                作成時間を入力してください
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group m-form__group row">
                                    <label class="col-form-label col-lg-2">
                                        @Html.DisplayNameFor(model => model.EditorID)
                                    </label>
                                    <div class="col-lg-6 col-md-9 col-sm-12">
                                        <select class="form-control m-select2" id="select2-editor" name="EditorID">

                                            <optgroup label="スーパー管理者">
                                                @foreach (var applicationUserPresenter in Model.ApplicationUserPresenterCollection)
                                                {
                                                    @if (applicationUserPresenter.Roles.Any(a => a.Name == "SuperAdmin"))
                                                    {
                                                        <option value="@applicationUserPresenter.ID" @(applicationUserPresenter.ID == Model.EditorID ? "selected" : "")>
                                                            @applicationUserPresenter.ID / @applicationUserPresenter.UserName
                                                        </option>
                                                    }
                                                }
                                            </optgroup>

                                            <optgroup label="管理者">
                                                @foreach (var applicationUserPresenter in Model.ApplicationUserPresenterCollection)
                                                {
                                                    @if (applicationUserPresenter.Roles.Any(a => a.Name == "Admin"))
                                                    {
                                                        <option value="@applicationUserPresenter.ID" @(applicationUserPresenter.ID == Model.EditorID ? "selected" : "")>
                                                            @applicationUserPresenter.ID / @applicationUserPresenter.UserName
                                                        </option>
                                                    }
                                                }
                                            </optgroup>

                                        </select>
                                        <span class="m-form__help">
                                            著者を選んでください
                                        </span>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                        <div class="m-form__actions m-form__actions--solid">
                            <div class="row">
                                <div class="col-lg-2"></div>
                                <div class="col-lg-6">
                                    <button type="submit" class="btn btn-success">
                                        保存
                                    </button>
                                    <button type="reset" class="btn btn-secondary" data-toggle="modal" data-target="#modal-confirm">
                                        戻る
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                }
                <!--end::Form-->
            </div>
        </div>
    </div>
    <!--begin::Modal-->
    <div class="modal fade" id="modal-confirm" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">
                        確認してください
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">
                            &times;
                        </span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        今はメニューリストへ戻ります…<br />
                    </p>
                    <em>
                        あなた入力したデータは<span class="m--font-boldest">保存しない</span>とします
                    </em>
                </div>
                <div class="modal-footer clearfix">
                    <button type="button" class="btn btn-secondary pull-left" data-dismiss="modal">
                        もう一度考えさせて...
                    </button>
                    <a href="@Url.Action("Index","ItemManage")" class="btn btn-danger pull-right">
                        今度の編集をやめる
                    </a>
                </div>
            </div>
        </div>
    </div>
    <!--end::Modal-->
</div>


@section Scripts {

    @*@{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }*@

    <script>
        var FormRepeater = {
            init: function () {
                $("#repeater-file-input").repeater({
                    initEmpty: !1,
                    defaultValues: { "text-input": "foo" },
                    show: function () {
                        $(this).slideDown()
                    },
                    hide: function (e) {
                        $(this).slideUp(e)
                    }
                });
            }
        };
        jQuery(document).ready(function () {
            FormRepeater.init()
        });

        var Select2 = {
            init: function () {
                $("#select2-tag").select2({
                    placeholder: "example: 黑檀，玉簪，珍珠，贝壳",
                    containerCssClass : "form-control",
                    tags: !0
                });
                $("#select2-editor").select2({
                    placeholder: "example: hanfuer@163.com / 晚风儿"
                });
                $("#select2-multiple").select2({
                    placeholder: "example: 受動態，助動詞"
                });
            }
        };
        jQuery(document).ready(function () {
            Select2.init();

            $('#m_datetimepicker_3').datetimepicker({
                todayHighlight: true,
                autoclose: true,
                pickerPosition: 'bottom-left',
                todayBtn: true,
                format: 'yyyy/mm/dd hh:ii'
            });
        });
    </script>
}